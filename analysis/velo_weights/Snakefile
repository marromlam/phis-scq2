# VELO WEIGHTS
#
#
#


# sync downstream {{{

rule velo_weights_sync_downstream:
  threads: 2
  resources:
    mem_mb = 15000
  wildcard_constraints:
    version = 'downstream',
  params:
    '/eos/lhcb/wg/B2CC/Bs2JpsiPhi-FullRun2/'
  output:
    SAMPLES+'/{year}/{mode}/{version}_full.root'
  log:
    'output/log/samples_sync_tuple/{year}/{mode}/{version}.log'
  run:
    # WARNING: here I am harcoding the YEAR
    shell(f"""(time\
    python analysis/samples/sync_tuples.py\
    --year 2016\
    --mode {wildcards.mode}\
    --version {wildcards.version}\
    --tree DecayTree\
    --output {output}\
    --eos {params}\
    ) &> {log}""")


ruleorder: velo_weights_reduce_downstream > samples_reduce_tuple
rule velo_weights_reduce_downstream:
  resources:
    mem_mb = 15000
  wildcard_constraints:
    version = 'downstream',
  input:
    ancient(SAMPLES+'/{year}/{mode}/{version}_full.root')
  output:
    SAMPLES+'/{year}/{mode}/{version}.root'
  log:
    'output/log/velo_weights_reduce_downstream/{year}/{mode}/{version}.log'
  run:
    shell(f"""(time\
    python analysis/velo_weights/reduce_tuple.py\
    --input-sample {input}\
    --output-sample {output}\
    ) &> {log}""")

# }}}


# Bu mass fit {{{

rule velo_weights_mass_fit_Bu:
  resources:
    mem_mb = 8192
  wildcard_constraints:
    bin = "(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20)",
    model = "(cb|dgauss|ipatia)",
    particle = "(muplus|muminus|hplus|hminus)",
    version = 'downstream'
  input:
    sample = SAMPLES+"/{year}/{mode}/{version}.root",
  output:
    pars = "output/params/velo_weights/{year}/{mode}/{version}_{model}_{particle}_docaz{bin}.json",
    pars_match = "output/params/velo_weights/{year}/{mode}/{version}_{model}_{particle}_docaz{bin}_match.json",
    fit = "output/figures/velo_weights/{year}/{mode}/{version}_massfit_{model}_{particle}_docaz{bin}.pdf",
    logfit = "output/figures/velo_weights/{year}/{mode}/{version}_logmassfit_{model}_{particle}_docaz{bin}.pdf",
    fit_match = "output/figures/velo_weights/{year}/{mode}/{version}_massfit_{model}_{particle}_docaz{bin}_match.pdf",
    logfit_match = "output/figures/velo_weights/{year}/{mode}/{version}_logmassfit_{model}_{particle}_docaz{bin}_match.pdf",
  log:
    "output/log/velo_weights_mass_fit_Bu/{year}/{mode}/{version}_{model}_{particle}docaz{bin}.log"
  run:
    shell(f"""(time\
    python analysis/velo_weights/mass_fit.py\
    --sample {input.sample}\
    --params {output.pars}\
    --params-match {output.pars_match}\
    --plot-mass {output.fit}\
    --plot-logmass {output.logfit}\
    --plot-mass-match {output.fit_match}\
    --plot-logmass-match {output.logfit_match}\
    --trigger "combined"\
    --year {wildcards.year}\
    --docaz-bin {wildcards.bin}\
    --mass-model {wildcards.model}\
    ) &> {log}""")



rule velo_weights_efficiency_Bu:
  wildcard_constraints:
    version = 'downstream'
  input:
    sample = SAMPLES+"/{year}/{mode}/{version}.root",
    pars = expand("output/params/velo_weights/{{year}}/{{mode}}/{{version}}_{{massmodel}}_{{particle}}_docaz{bin}.json", bin=range(1,15)),
    pars_match = expand("output/params/velo_weights/{{year}}/{{mode}}/{{version}}_{{massmodel}}_{{particle}}_docaz{bin}_match.json", bin=range(1,15)),
  output:
    pars = "output/params/velo_weights/{year}/{mode}/{version}_{effmodel}_{massmodel}_{particle}.json",
    plot = "output/figures/velo_weights/{year}/{mode}/{version}_{effmodel}_{massmodel}_{particle}.pdf",
    logplot = "output/figures/velo_weights/{year}/{mode}/{version}_log{effmodel}_{massmodel}_{particle}.pdf",
  run:
    shell(f"""
    python analysis/velo_weights/efficiency_fitter.py\
    --params {",".join(input.pars)}\
    --params-match {",".join(input.pars_match)}\
    --sample {input.sample}\
    --eff-pars {output.pars}\
    --plot {output.plot}\
    --plot-log {output.logplot}\
    --trigger "combined"\
    --year {wildcards.year}\
    --mass-model {wildcards.massmodel}\
    """)


rule velo_weights_compute:
  resources:
    mem_mb=7168
  input:
    original = lambda wcs: tuples(wcs, weight='sWeight'),
    pars = expand("output/params/velo_weights/{{year}}/Bu2JpsiKplus/downstream_{effmodel}_{massmodel}_hplus.json",
                  effmodel=config['velo_effmodel'], massmodel=config['velo_massmodel'])
  output:
    temp(SAMPLES+'/{year}/{mode}/{version}_veloWeight.root')
  log:
    'output/log/velo_weights_compute/{year}/{mode}/{version}.log'
  run:
    shell(f"cp {input.original} {output}")
    send_mail(f"Polarity weighting :: {wildcards}", f"{log}")

#
# rule time_acceptance_upper:
#   input:
#     # sample = "/scratch46/marcos.romero/sidecar/{year}/{mode}/{version}.root",
#     sample = "/scratch17/marcos.romero/Bs2JpsiPhi-FullRun2/selection/output/tuples/MC_Bu2JpsiKplus/MC_Bu2JpsiKplus_2016_selected_bdt.root",
#     eff = expand("output/params/velo_weights/{{year}}/{{mode}}/{{version}}_{{effmodel}}_{{massmodel}}_{particle}.json",
#                  particle=['muminus', 'hplus'])
#   output:
#     timeacc = "output/params/time_acceptance/{year}/{mode}/{version}_{effmodel}_{massmodel}.json"
#   run:
#     shell(f"""
#     python analysis/velo_weights/time_acceptance_upper.py\
#     --sample {input.sample}\
#     --eff {input.eff}\
#     --timeacc {output.timeacc}\
#     """)
