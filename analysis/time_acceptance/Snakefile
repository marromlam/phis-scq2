#ruleorder: time_acceptance_simultaneousBuasBs > time_acceptance_simultaneous
#ruleorder: time_acceptance_simultaneousBdasBs > time_acceptance_simultaneous



# decay_time_acceptance computations -------------------------------------------
#    These are several rules related to decay-time acceptance. The main one is
#    time_acceptance, which computes the spline coefficients of the
#    Bs2JpsiPhi acceptance.

rule time_acceptance_single:
  resources:
    mem_mb=2048
  wildcard_constraints:
    timeacc = "single.*"
  input:
    sample = lambda wcs: tuples(wcs, mode=wcs.mode),
  output:
    params = 'output/params/time_acceptance/{year}/{mode}/{version}_{timeacc}_{trigger}.json',
    tables = 'output/tables/time_acceptance/{year}/{mode}/{version}_{timeacc}_{trigger}.tex',
  log:
    'output/log/time_acceptance_single/{year}/{mode}/{version}_{timeacc}_{trigger}.log'
  run:
    try:
      contour = config['contour'] 
    except:
      contour = 0
    shell(f"""
    (time\
    python analysis/time_acceptance/single.py\
           --sample {input.sample}\
           --params {output.params}\
           --tables {output.tables}\
           --mode {wildcards.mode}\
           --year {wildcards.year}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
           --contour {contour}\
    ) #&> {log}
    """)
    send_mail(f"Time Acceptance :: {wildcards}", f"{log}")



rule time_acceptance_simultaneous:
  resources:
    mem_mb=4096
  wildcard_constraints:
    timeacc = r"(simul)((?!.*?asBs).*)(.*)?",
  input:
    sample = lambda wcs: [
      tuples(wcs,mode='MC_Bs2JpsiPhi_dG0'),
      tuples(wcs,mode='MC_Bd2JpsiKstar'),
      tuples(wcs,mode='Bd2JpsiKstar')
    ]
  output:
    params = [
      'output/params/time_acceptance/{year}/MC_Bs2JpsiPhi_dG0/{version}_{timeacc}_{trigger}.json',
      'output/params/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}_{trigger}.json',
      'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}_{trigger}.json'
    ],
    tables = [
      'output/tables/time_acceptance/{year}/MC_Bs2JpsiPhi_dG0/{version}_{timeacc}_{trigger}.tex',
      'output/tables/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}_{trigger}.tex',
      'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}_{trigger}.tex'
    ]
  log:
    'output/log/time_acceptance_simultaneous/{year}/{version}_{timeacc}_{trigger}.log'
  run:
    try:
      contour = config['contour'] 
    except:
      contour = 0
    shell(f"""
    (time\
    python analysis/time_acceptance/simultaneous.py\
           --samples {",".join(input.sample)}\
           --params {",".join(output.params)}\
           --tables {",".join(output.tables)}\
           --year {wildcards.year}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
           --contour {contour}\
    ) &> {log} 2>&1""")
    send_mail(f"Time Acceptance :: {wildcards}", f"{log}")



rule time_acceptance_simultaneousDGn0:
  wildcard_constraints:
    timeacc = "simul.*",
  input:
    sample = lambda wcs: [
      tuples(wcs,mode='MC_Bs2JpsiPhi'),
      tuples(wcs,mode='MC_Bd2JpsiKstar'),
      tuples(wcs,mode='Bd2JpsiKstar')
    ]
  params:
    params = [
      'time_acceptance/params/{year}/MC_Bs2JpsiPhi/baseline.json',
      'time_acceptance/params/{year}/MC_Bd2JpsiKstar/baseline.json',
      'time_acceptance/params/{year}/Bd2JpsiKstar/baseline.json'
    ]
  output:
    params = [
      'output/params/time_acceptance/{year}/MC_Bs2JpsiPhi/{version}_{timeacc}DGn0_{trigger}.json',
      'output/params/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}DGn0_{trigger}.json',
      'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}DGn0_{trigger}.json'
    ],
    tables = [
      'output/tables/time_acceptance/{year}/MC_Bs2JpsiPhi/{version}_{timeacc}DGn0_{trigger}.tex',
      'output/tables/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}DGn0_{trigger}.tex',
      'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}DGn0_{trigger}.tex'
    ]
  log:
    'output/log/time_acceptance_simultaneous/{year}/{version}_{timeacc}DGn0_{trigger}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/simultaneous.py\
           --samples {",".join(input.sample)}\
           --input-params {",".join(params.params)}\
           --output-params {",".join(output.params)}\
           --output-tables {",".join(output.tables)}\
           --year {wildcards.year}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
    ) &> {log} 2>&1""")
    send_mail(f"Simultaneous Time Acceptance dGn0 :: {wildcards}", f"{log}")



rule time_acceptance_simultaneousBdasBs:
  resources:
    mem_mb=4096
  wildcard_constraints:
    timeacc = "simul.*",
  input:
    sample = lambda wcs: [
      tuples(wcs,mode='MC_Bd2JpsiKstar'),
      tuples(wcs,mode='Bd2JpsiKstar')
    ]
  output:
    params = [
      'output/params/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BdasBsA_{trigger}.json',
      'output/params/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BdasBsB_{trigger}.json',
      'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}BdasBs_{trigger}.json'
    ],
    tables = [
      'output/tables/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BdasBsA_{trigger}.tex',
      'output/tables/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BdasBsB_{trigger}.tex',
      'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}BdasBs_{trigger}.tex'
    ]
  log:
    'output/log/time_acceptance_simultaneousBdasBs/{year}/{version}_{timeacc}BdasBs_{trigger}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/simultaneousBdasBs.py\
           --samples {",".join(input.sample)}\
           --params  {",".join(output.params)}\
           --tables  {",".join(output.tables)}\
           --year    {wildcards.year}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
    ) &> {log} 2>&1""")
    send_mail(f"Time Acceptance Bd as Bs :: {wildcards}", f"{log}")



rule time_acceptance_simultaneousBuasBs:
  resources:
    mem_mb=4096
  wildcard_constraints:
    timeacc = "simul.*",
  input:
    sample = lambda wcs: [
      tuples(wcs,mode='MC_Bu2JpsiKplus'),
      tuples(wcs,mode='MC_Bd2JpsiKstar'),
      tuples(wcs,mode='Bd2JpsiKstar')
    ]
  output:
    params = [
      'output/params/time_acceptance/{year}/MC_Bu2JpsiKplus/{version}_{timeacc}BuasBs_{trigger}.json',
      'output/params/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BuasBs_{trigger}.json',
      'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}BuasBs_{trigger}.json'
    ],
    tables = [
      'output/tables/time_acceptance/{year}/MC_Bu2JpsiKplus/{version}_{timeacc}BuasBs_{trigger}.tex',
      'output/tables/time_acceptance/{year}/MC_Bd2JpsiKstar/{version}_{timeacc}BuasBs_{trigger}.tex',
      'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_{timeacc}BuasBs_{trigger}.tex'
    ]
  log:
    'output/log/time_acceptance_simultaneousBuasBs/{year}/{version}_{timeacc}BuasBs_{trigger}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/simultaneousBuasBs.py\
           --samples {",".join(input.sample)}\
           --params  {",".join(output.params)}\
           --tables  {",".join(output.tables)}\
           --year    {wildcards.year}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
    ) &> {log} 2>&1""")
    send_mail(f"Time Acceptance Bu as Bs :: {wildcards}", f"{log}")



# lifetime fit -----------------------------------------------------------------
#    These are several rules related to decay-time acceptance. The main one is
#    time_acceptance, which computes the spline coefficients of the
#    Bs2JpsiPhi acceptance.
rule lifetime_fit:
  resources:
    mem_mb=4096
  wildcard_constraints:
    trigger = "(biased|unbiased|combined)",
  input:
    sample = lambda wcs: [
      tuples(wcs,mode='MC_Bd2JpsiKstar'),
      tuples(wcs,mode='Bd2JpsiKstar')
    ]
  params:
    params = [
      'time_acceptance/params/{year}/MC_Bd2JpsiKstar/baseline.json',
      'time_acceptance/params/{year}/Bd2JpsiKstar/baseline.json'
    ]
  output:
    params   = 'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_lifetimefit.json',
    tables   = 'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_lifetimefit.tex',
  log:
    'output/log/time_acceptance_single/{year}/Bd2JpsiKstar/{version}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/lifetimefit.py\
           --sample {",".join(input.sample)}\
           --output-params {",".join(output.params)}\
           --output-tables {output.tables}\
           --year {wildcards.year}\
           --version {wildcards.version}\
    ) &> {log} 2>&1""")
    send_mail("Single Time Acceptance", f"{log}")



rule lifetimeBd:
  resources:
    mem_mb=4096
  input:
    sample = lambda wcs: tuples(wcs,mode='Bd2JpsiKstar',year=f'{wcs.year}'),
    biased = lambda wcs: expand('output/params/time_acceptance/{y}/Bd2JpsiKstar/{{version}}_{{timeacc}}BdasBs_biased.json', y=YEARS[f'{wcs.year}']),
    unbiased = lambda wcs: expand('output/params/time_acceptance/{y}/Bd2JpsiKstar/{{version}}_{{timeacc}}BdasBs_unbiased.json', y=YEARS[f'{wcs.year}']),
  output:
    params = 'output/params/time_acceptance/{year}/Bd2JpsiKstar/{version}_lifeBd{timeacc}.json',
    tables = 'output/tables/time_acceptance/{year}/Bd2JpsiKstar/{version}_lifeBd{timeacc}.tex',
  log:
    'output/log/lifetimeBd/{year}/Bd2JpsiKstar/{version}_life{timeacc}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/lifetimeBd.py\
           --sample {",".join(input.sample)}\
           --biased-params {",".join(input.biased)}\
           --unbiased-params {",".join(input.unbiased)}\
           --output-params {output.params}\
           --output-tables {output.tables}\
           --year {",".join(YEARS[f'{wildcards.year}'])}\
           --version {wildcards.version}\
           --timeacc {wildcards.timeacc}\
    ) &> {log} 2>&1""")
    send_mail(f"Lifetime Bd fit :: {wildcards}", f"{log}")



rule lifetimeBu:
  resources:
    mem_mb=4096
  input:
    sample = lambda wcs: tuples(wcs,mode='Bu2JpsiKplus',year=f'{wcs.year}'),
    biased = lambda wcs: expand('output/params/time_acceptance/{y}/Bd2JpsiKstar/{{version}}_{{timeacc}}BuasBs_biased.json', y=YEARS[f'{wcs.year}']),
    unbiased = lambda wcs: expand('output/params/time_acceptance/{y}/Bd2JpsiKstar/{{version}}_{{timeacc}}BuasBs_unbiased.json', y=YEARS[f'{wcs.year}']),
  output:
    params = 'output/params/time_acceptance/{year}/Bu2JpsiKplus/{version}_lifeBu{timeacc}.json',
    tables = 'output/tables/time_acceptance/{year}/Bu2JpsiKplus/{version}_lifeBu{timeacc}.tex',
  log:
    'output/log/lifetimeBu/{year}/Bu2JpsiKplus/{version}_lifeBu{timeacc}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/lifetimeBu.py\
           --sample {",".join(input.sample)}\
           --biased-params {",".join(input.biased)}\
           --unbiased-params {",".join(input.unbiased)}\
           --output-params {output.params}\
           --output-tables {output.tables}\
           --year {",".join(YEARS[f'{wildcards.year}'])}\
           --version {wildcards.version}\
           --timeacc {wildcards.timeacc}\
    ) &> {log} 2>&1""")
    send_mail(f"Lifetime Bu fit :: {wildcards}", f"{log}")




# decay_time_acceptance plots --------------------------------------------------
#    These are several rules related to decay-time acceptance. The main one is
#    time_acceptance, which computes the spline coefficients of the
#    Bs2JpsiPhi acceptance.

rule time_acceptance_plot:
  resources:
    mem_mb=16384
  wildcard_constraints:
    plot = "(fit|fitlog|spline|splinelog)",
  input:
    samples = lambda wcs: sum([[
      tuples(wcs,version=v, mode='MC_Bs2JpsiPhi_dG0'),
      tuples(wcs,version=v, mode='MC_Bd2JpsiKstar'),
      tuples(wcs,version=v, mode='Bd2JpsiKstar')]
    for v in f"{wcs.version}".split('+')], []),
    params = lambda wcs: expand([
      'output/params/time_acceptance/{{year}}/MC_Bs2JpsiPhi_dG0/{version}_{timeacc}_{{trigger}}.json',
      'output/params/time_acceptance/{{year}}/MC_Bd2JpsiKstar/{version}_{timeacc}_{{trigger}}.json',
      'output/params/time_acceptance/{{year}}/Bd2JpsiKstar/{version}_{timeacc}_{{trigger}}.json'
    ], timeacc=f"{wcs.timeacc}".split('+'), version=f"{wcs.version}".split('+'))
  output:
    'output/figures/time_acceptance/{year}/{mode}/{version}_{timeacc}_{trigger}_{plot}.pdf',
  log:
    'output/log/time_acceptance_plot/{year}/{mode}/{version}_{timeacc}_{trigger}_{plot}.log'
  run:
    shell(f"""
    (time\
    python analysis/time_acceptance/plot_functions.py\
           --samples {",".join(input.samples)}\
           --params {",".join(input.params)}\
           --figure {output}\
           --year {wildcards.year}\
           --mode {wildcards.mode}\
           --version {wildcards.version}\
           --trigger {wildcards.trigger}\
           --timeacc {wildcards.timeacc}\
           --plot {wildcards.plot}\
    ) &> {log} 2>&1""")
    send_mail(f"Simultaneous Time Acceptance", f" ", output)
