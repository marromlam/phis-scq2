variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"



cache: &cache_definition
  key: build_cache
  paths:
    - conda3
    - ipanema3
    - .cache/pip


.cache_consumer:
  cache:
    <<: *cache_definition
    policy: pull



#cache: &global_cache
#  #key: ${CI_COMMIT_REF_SLUG}
#  paths:
#    - conda3
#  policy: pull-push





stages:
  - setup
  - test
  - run


default:
  before_script:
    - pwd
    - ls
    - ls
    - source conda3/bin/activate
    - conda activate phisscq
    - export IPANEMA_BACKEND='opencl'
    - export PYOPENCL_COMPILER_OUTPUT=1
    - export PYOPENCL_NO_CACHE=1
    - export PYTHONPATH="phis-scq":$PYTHONPATH
    - ls 


setup_environment:
  stage: setup
  extends: .cache_consumer
  before_script:
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    - mkdir -p sidecar
    - pwd
    - ls
  script:
    - bash miniconda.sh -b -s -f -p conda3/
    - source conda3/bin/activate
    - conda update -n base -c defaults conda
    - conda create --name phisscq
    - conda activate phisscq
    - conda config --add channels conda-forge
    - conda install pip pocl pyopencl ROOT
    - git clone https://gitlab.cern.ch/mromerol/ipanema3.git ipanema3/
    - pip install -e ipanema3/
    - pip install snakemake==5.22.0 hep_ml py-cpuinfo
    - cp utils/default.json config.json
    - python -c "import ipanema"
  only:
    changes:
      - utils/install.sh
      - utils/default.json
      - .gitlab-ci.yml
  artifacts:
    paths:
      - sidecar
    expire_in: 1 year




test_environment:
  stage: test
  extends: .cache_consumer
  script:
    - python -c "import ipanema"
    - python -c "from ipanema import initialize; initialize('opencl',1)"



test_snakemake:
  stage: test
  extends: .cache_consumer
  script:
    - snakemake sidecar/2015/Bd2JpsiKstar/v0r5_sWeight.root -j -f
  artifacts:
    paths:
      - sidecar
    expire_in: 1 year



run:
  stage: run
  #extends: .cache_consumer
  script:
    - snakemake sidecar/2015/Bd2JpsiKstar/v0r5.root -j -f
