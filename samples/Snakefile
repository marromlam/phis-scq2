# sync_ntuples ----------------------------------------------------------------
#    This rule downloads all files corresponding to a given VERSION from EOS
#    to SAMPLES_PATH folder. It requires you to make a kinit on your system,
#    and then it worka automatically.

rule sync_ntuples:
  output:
    sample = SAMPLES_PATH+'{year}/{mode}/{version}_sWeight.root'
  log:
    'output/log/samples/sync_ntuples/{year}/{mode}/{version}.log'
  run:
    if f"{wildcards.version}" in ("v0r0", "v0r1"):
      # WARNING:  this works only in Santiago
      shell(f"cp /scratch03/marcos.romero/phisRun2/cooked_test_files/{wildcards.year}/{wildcards.mode}/{wildcards.version}_sWeight.root {output}")
    else:
      shell(f"""
        (time\
        python samples/new_downloader.py\
               --year {wildcards.year}\
               --mode {wildcards.mode}\
               --version {wildcards.version}\
               --tree DecayTree\
               --output {output}\
        ) &> {log} 2>&1
      """)



# reduce_ntuples ---------------------------------------------------------------
#    Reduces the amount of branches in the original ntuples. This rule builds
#    the ntuples that will actually be used for phis-scq analysis package.

rule reduce_ntuples:
  input:
    sample = lambda wcs: tuples(wcs, weight='kinWeight')
  output:
    sample = SAMPLES_PATH+'{year}/{mode}/{version,[A-Za-z0-9]+}.root'
  log:
    'output/log/samples/reduce_ntuples/{year}_{mode}_{version}.log'
  run:
    shell(f"""
      (time\
      python samples/reduce_ntuples.py\
             --input-file {input.sample}\
             --output-file {output.sample}\
             --input-tree DecayTree\
             --output-tree DecayTree\
      ) &> {log} 2>&1
    """)
    # Clean up files
    # shell(f"""
    #   rm {SAMPLES_PATH}{wildcards.year}/{wildcards.mode}/{wildcards.version}_*Weight.root
    # """)
