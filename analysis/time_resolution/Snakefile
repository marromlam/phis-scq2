# TIME RESOLUTION
#
#
#


# Time resolution basics {{{
#    This rule copies Csp factors from analysis/params and places them according
#    to the name of the output.

rule time_resolution_basics:
  wildcard_constraints:
    timeres = "(none|old)"
  output:
    "output/params/time_resolution/{year}/{mode}/{version}_{timeres}.json",
  run:
    import os
    res = "analysis/params/time_resolution/{wildcards.mode}/{wildcards.timeres}.json"
    shell(f"mkdir -p {os.path.dirname(f'{output}')}")
    shell(f"cp {res} {output}")

# }}}


# Time resolution from git {{{
#    Currently time resolution is only computed at NIKHEF, hence we need to sync
#    it from there.

rule time_resolution_from_git:
  threads: 128
  wildcard_constraints:
    timeres = "ams(rd|mc|dg0)"
  params:
    repo = "ssh://git@gitlab.cern.ch:7999/lhcb-b2cc/Bs2JpsiPhi-FullRun2.git",
    linker = "analysis/params/time_resolution/linker.json"
  output:
    "output/params/time_resolution/{year}/{mode}/{version}_{timeres}.json",
  log:
    "output/log/time_resolution_from_git/{year}/{mode}/{version}_{timeres}.log",
  run:
    shell(f"""(time\
    python analysis/time_resolution/download_from_git.py\
    --year {wildcards.year}\
    --mode {wildcards.mode}\
    --version v0r5\
    --timeres {wildcards.timeres}\
    --output {output}\
    --repo {params.repo}\
    --linker {params.linker}\
    ) &> {log}""")

# }}}


# vim:foldmethod=marker
