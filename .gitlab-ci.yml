stages:
  - build
  - test
  - deploy
  


before_script:
    - echo "setting environment from cache"
    # Use keytab
    #- if [ -z ${ENCODED_KEYTAB+x} ]; then echo "ENCODED_KEYTAB not set. EOS access will not be possible."; else echo "EOS access granted" && echo "$ENCODED_KEYTAB" | base64 -d > ap.keytab && kinit mromerol@CERN.CH -k -t ap.keytab && rm ap.keytab; fi
    - cp utils/default.json config.json
    - source .ccache/conda3/bin/activate
    - conda activate phisscq
    - export IPANEMA_BACKEND='opencl'
    - export PYOPENCL_COMPILER_OUTPUT=1
    - export PYOPENCL_NO_CACHE=1
    - export PYTHONPATH=$PWD:$PYTHONPATH
    # pass kerberos sending password
    - export KRB5_CONFIG="$PWD/krb5.conf"
    - echo "$SERVICE_PASS" | base64 -d | kinit mromerol@CERN.CH
    - klist




Setup Environment:
  stage: build
  before_script:
    - ls -larth
  script:
    - rm -rf .ccache sidecar tmp
    - mkdir -p .ccache sidecar
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O .ccache/miniconda.sh
    - bash .ccache/miniconda.sh -b -s -f -p .ccache/conda3
    - source .ccache/conda3/bin/activate
    - conda update -n base -c defaults conda
    - conda create --name phisscq
    - conda activate phisscq
    - conda config --add channels conda-forge
    - conda install pip pocl pyopencl ROOT
    - git clone https://gitlab.cern.ch/mromerol/ipanema3.git .ccache/ipanema3
    - pip install -e .ccache/ipanema3
    - pip install snakemake==5.22.0 hep_ml py-cpuinfo
  cache:
    key: build_cache_${CI_COMMIT_REF_SLUG}
    paths:
      - .ccache
  #only:
  #  changes:
  #    - utils/default.json
  #    - .gitlab-ci.yml
  artifacts:
    paths:
      - sidecar
      - tmp
    expire_in: 1 year



Test Environment:
  stage: test
  #needs:
  #  - job: SetupEnvironment
  script:
    - ls .ccache
    - python -c "import ipanema"
    - python -c "from ipanema import initialize; initialize('opencl',1)"
    - xrdfs root://eoslhcb.cern.ch/ ls /eos
  cache:
    key: build_cache_${CI_COMMIT_REF_SLUG}
    paths:
      - .ccache
    policy: pull


Test Pipeline:
  stage: test
  #needs:
  #  - job: SetupEnvironment
  #  artifacts: true
  script:
    - snakemake sidecar/2015/Bd2JpsiKstar/v0r5_sWeight.root -j -f
  artifacts:
    paths:
      - sidecar
      - tmp
      - output
    expire_in: 1 year
  cache:
    key: build_cache_${CI_COMMIT_REF_SLUG}
    paths:
      - .ccache
    policy: pull



Run Analysis:
  stage: deploy
  #needs:
  #  - job: SetupEnvironment
  #  artifacts: true
  script:
    - snakemake output/params/angular_fit/run2/Bs2JpsiPhi/v0r5_run2_run2_simul.json -j -F
  artifacts:
    paths:
      - output
    expire_in: 1 year
    when: always
  cache:
    key: build_cache_${CI_COMMIT_REF_SLUG}
    paths:
      - .ccache
    policy: pull

